# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LogEntry(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, instance: str=None, timestamp: datetime=None, text: str=None):  # noqa: E501
        """LogEntry - a model defined in Swagger

        :param name: The name of this LogEntry.  # noqa: E501
        :type name: str
        :param instance: The instance of this LogEntry.  # noqa: E501
        :type instance: str
        :param timestamp: The timestamp of this LogEntry.  # noqa: E501
        :type timestamp: datetime
        :param text: The text of this LogEntry.  # noqa: E501
        :type text: str
        """
        self.swagger_types = {
            'name': str,
            'instance': str,
            'timestamp': datetime,
            'text': str
        }

        self.attribute_map = {
            'name': 'name',
            'instance': 'instance',
            'timestamp': 'timestamp',
            'text': 'text'
        }

        self._name = name
        self._instance = instance
        self._timestamp = timestamp
        self._text = text

    @classmethod
    def from_dict(cls, dikt) -> 'LogEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LogEntry of this LogEntry.  # noqa: E501
        :rtype: LogEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this LogEntry.

        the function name  # noqa: E501

        :return: The name of this LogEntry.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this LogEntry.

        the function name  # noqa: E501

        :param name: The name of this LogEntry.
        :type name: str
        """

        self._name = name

    @property
    def instance(self) -> str:
        """Gets the instance of this LogEntry.

        the name/id of the specific function instance  # noqa: E501

        :return: The instance of this LogEntry.
        :rtype: str
        """
        return self._instance

    @instance.setter
    def instance(self, instance: str):
        """Sets the instance of this LogEntry.

        the name/id of the specific function instance  # noqa: E501

        :param instance: The instance of this LogEntry.
        :type instance: str
        """

        self._instance = instance

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this LogEntry.

        the timestamp of when the log message was recorded  # noqa: E501

        :return: The timestamp of this LogEntry.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this LogEntry.

        the timestamp of when the log message was recorded  # noqa: E501

        :param timestamp: The timestamp of this LogEntry.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def text(self) -> str:
        """Gets the text of this LogEntry.

        raw log message content  # noqa: E501

        :return: The text of this LogEntry.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this LogEntry.

        raw log message content  # noqa: E501

        :param text: The text of this LogEntry.
        :type text: str
        """

        self._text = text
